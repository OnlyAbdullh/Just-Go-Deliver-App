{
    "openapi": "3.0.0",
    "info": {
        "title": "My API Documentation",
        "description": "API documentation for Just-Go-Deliver-App",
        "version": "1.0.0"
    },
    "paths": {
        "/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Initiate user registration and send OTP",
                "operationId": "0903f2e0df1a8857bee538fc055417f0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "securepassword123"
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "New York, USA"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Registration initiated. OTP sent to your email.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Registration initiated. OTP sent to your email."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Email already registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "This email is already registered."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 409
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate user and generate tokens",
                "operationId": "2dd578ff7aba2721293dac66833b27d1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "securepassword"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User logged in successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                                },
                                                "refresh_token": {
                                                    "type": "string",
                                                    "example": "eyJpdiI6IkZVNlF2ZVVIZ25JWkVqaXgxUmFRRHc9PS..."
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 26
                                                        },
                                                        "first_name": {
                                                            "type": "string",
                                                            "example": "abdullah"
                                                        },
                                                        "last_name": {
                                                            "type": "string",
                                                            "example": "alkasm"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "abdallaalksm9@gmail.com"
                                                        },
                                                        "location": {
                                                            "type": "string",
                                                            "example": "location 1"
                                                        },
                                                        "image": {
                                                            "type": "string",
                                                            "example": "any path",
                                                            "nullable": true
                                                        },
                                                        "role": {
                                                            "type": "string",
                                                            "example": "user"
                                                        },
                                                        "fcm_token": {
                                                            "type": "string",
                                                            "example": 3231,
                                                            "nullable": true
                                                        },
                                                        "phone_number": {
                                                            "type": "string",
                                                            "example": "0969090711"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "User already logged in on this device",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You have already logged in on this device."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 409
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh the access token using a refresh token",
                "operationId": "0c3ea3c61aed881016646810460499e9",
                "parameters": [
                    {
                        "name": "Refresh-Token",
                        "in": "header",
                        "description": "The refresh token for authentication",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "dGhpc2lzYXJlZnJlc2h0b2tlbg=="
                        }
                    },
                    {
                        "name": "Device-ID",
                        "in": "header",
                        "description": "The device ID associated with the user session",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "1234567890abcdef"
                        }
                    }
                ],
                "requestBody": {
                    "description": "No body required. The headers must include 'Refresh-Token' and 'Device-ID'.",
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "Access token refreshed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Access token refreshed successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "eyJhbGciOiJIUzI1NiIsInR..."
                                                },
                                                "expires_in": {
                                                    "type": "string",
                                                    "example": "15 m"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid or expired refresh token.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid or expired refresh token"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Device ID not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Device ID not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout a user and invalidate tokens",
                "operationId": "68a6108af04af5e3bc1ea68a6c6f1299",
                "parameters": [
                    {
                        "name": "Device-ID",
                        "in": "header",
                        "description": "The device ID associated with the user's session",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "1234567890abcdef"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User logged out successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User logged out successfully."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Device ID not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Device ID not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/carts/{store_id}/products/{product_id}/add": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Add a product to the cart",
                "description": "Adds a product to the authenticated user's cart. Validates stock availability before adding.",
                "operationId": "bb4c9692fce643fa6012ec0565d88898",
                "parameters": [
                    {
                        "name": "store_id",
                        "in": "path",
                        "description": "The ID of the store where the product is located",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "product_id",
                        "in": "path",
                        "description": "The ID of the product to be added to the cart",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "quantity": {
                                        "description": "The quantity of the product to add to the cart",
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product successfully added to the cart",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product added to cart successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error adding product to cart",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not enough stock available"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/carts/products": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Retrieve all products in the user's cart",
                "description": "Fetch all products in the authenticated user's cart, including store and product details. Returns an empty array if the cart is empty.",
                "operationId": "9b31ba90980df1c122f96a2fb8cb21a1",
                "responses": {
                    "200": {
                        "description": "Successful retrieval of cart products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Indicates if the operation was successful",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "description": "List of products in the cart",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "store_id": {
                                                        "description": "ID of the store",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "store_name": {
                                                        "description": "Name of the store",
                                                        "type": "string",
                                                        "example": "Ali"
                                                    },
                                                    "order_quantity": {
                                                        "description": "Quantity ordered",
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "store_product_id": {
                                                        "description": "ID of the product in the store",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "price": {
                                                        "description": "Price of the product",
                                                        "type": "string",
                                                        "example": "400.00"
                                                    },
                                                    "quantity": {
                                                        "description": "Available quantity of the product",
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "description": {
                                                        "description": "Description of the product",
                                                        "type": "string",
                                                        "example": "Black"
                                                    },
                                                    "product_id": {
                                                        "description": "ID of the product",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "product_name": {
                                                        "description": "Name of the product",
                                                        "type": "string",
                                                        "example": "iPhone"
                                                    },
                                                    "main_image": {
                                                        "description": "URL of the main product image",
                                                        "type": "string",
                                                        "example": "http://127.0.0.1:8000/storage/products/5xHVC1FalLQdtMDWEnHFwyABX0OF9zo6hFd6kytS.png"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "status_code": {
                                            "description": "HTTP status code of the response",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "total_price": {
                                            "type": "integer",
                                            "example": 2750
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/carts/update-quantities": {
            "put": {
                "tags": [
                    "Cart"
                ],
                "summary": "Update quantities of products in the cart",
                "description": "Update the quantities of items in the user's cart based on stock availability. Updates only items with valid quantities.",
                "operationId": "b90aaaa46685f81e282323be7c2bb32b",
                "parameters": [
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "The language to return results in (ar for Arabic, en for English)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ar",
                                "en"
                            ],
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "description": "Array of items to update",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "product_id": {
                                                    "description": "ID of the product",
                                                    "type": "integer",
                                                    "example": 101
                                                },
                                                "store_id": {
                                                    "description": "ID of the store",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "cart_amount": {
                                                    "description": "Updated cart quantity",
                                                    "type": "integer",
                                                    "example": 5
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success responses with multiple possibilities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "oneOf": [
                                            {
                                                "properties": {
                                                    "message": {
                                                        "type": "string",
                                                        "example": "Updated Product ID 101 to quantity 5."
                                                    },
                                                    "store_id": {
                                                        "description": "ID of the store",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "product_id": {
                                                        "type": "integer",
                                                        "example": 101
                                                    },
                                                    "cart_amount": {
                                                        "type": "integer",
                                                        "example": 5
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "properties": {
                                                    "message": {
                                                        "type": "string",
                                                        "example": "Only 3 of Product ID 101 is available. Updated the quantity to 3."
                                                    },
                                                    "store_id": {
                                                        "description": "ID of the store",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "product_id": {
                                                        "type": "integer",
                                                        "example": 101
                                                    },
                                                    "cart_amount": {
                                                        "type": "integer",
                                                        "example": 3
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "properties": {
                                                    "message": {
                                                        "type": "string",
                                                        "example": "There is no product available for now for Product ID 3."
                                                    },
                                                    "store_id": {
                                                        "description": "ID of the store",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "product_id": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "cart_amount": {
                                                        "type": "integer",
                                                        "example": 0
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message describing the issue",
                                            "type": "string",
                                            "example": "Invalid input data. Please ensure all items have valid store_id, product_id, and quantity."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/carts/delete-products": {
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Delete specific products from the cart",
                "description": "Deletes specific products from the user's cart based on the provided product and store IDs.",
                "operationId": "62d938f42c9d344123c87403fe6f9e86",
                "parameters": [
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "The language to return results in (ar for Arabic, en for English)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ar",
                                "en"
                            ],
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "description": "Array of items to delete",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "product_id": {
                                                    "description": "ID of the product to delete",
                                                    "type": "integer",
                                                    "example": 101
                                                },
                                                "store_id": {
                                                    "description": "ID of the store where the product is located",
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Products deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string",
                                            "example": "3 products were Deleted from the Cart successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message describing the issue",
                                            "type": "string",
                                            "example": "Invalid data provided. Please check the input and try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/carts/delete-all": {
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Delete all products from the cart",
                "description": "Deletes all products from the user's cart.",
                "operationId": "12312efcb7f8a48009618712fe942f99",
                "parameters": [
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "The language to return results in (ar for Arabic, en for English)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ar",
                                "en"
                            ],
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All products deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string",
                                            "example": "All products have been deleted from the cart."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message describing the issue",
                                            "type": "string",
                                            "example": "Failed to delete products. Please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api//favorites/{store_id}/products/{product_id}": {
            "get": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Add a product to favorites",
                "description": "Adds a product to the user's favorites if it belongs to the specified store and is not already in favorites.",
                "operationId": "0e9500953ff76e5a4d72e7b1ab28bbe0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "store_id",
                                    "product_id"
                                ],
                                "properties": {
                                    "store_id": {
                                        "description": "ID of the store",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "product_id": {
                                        "description": "ID of the product",
                                        "type": "integer",
                                        "example": 42
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product added to favorites successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product added to favorites successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Product is already in your favorites.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product is already in your favorites."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/favorites/{store_id}/products/{product_id}/remove": {
            "delete": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Remove a product from favorites",
                "operationId": "ace46bb51f5e0872427bd2e361e454cf",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "store_id",
                                    "product_id"
                                ],
                                "properties": {
                                    "store_id": {
                                        "description": "ID of the store",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "product_id": {
                                        "description": "ID of the product",
                                        "type": "integer",
                                        "example": 101
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product removed from favorites successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product removed from favorites successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product is not in your favorites",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product is not in your favorites."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/favorites": {
            "post": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Get list of favorite products",
                "description": "Retrieves a list of the user's favorite products along with associated store details, such as store ID, store name, and product-specific details (price, quantity, description, sold quantity).",
                "operationId": "87113d886b20e66c078004acfcaaa093",
                "responses": {
                    "200": {
                        "description": "Favorites retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Favorites retrieved successfully."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "product_id": {
                                                        "type": "integer",
                                                        "example": 4
                                                    },
                                                    "product_name": {
                                                        "type": "string",
                                                        "example": "laptop lenovo"
                                                    },
                                                    "category_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "store_id": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "store_name": {
                                                        "type": "string",
                                                        "example": "only one"
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 1000
                                                    },
                                                    "quantity": {
                                                        "type": "integer",
                                                        "example": 4
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "ram 16/ssd 512/Rtx 3050ti"
                                                    },
                                                    "sold_quantity": {
                                                        "type": "integer",
                                                        "example": 0
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/favorites/{store_id}/products/{product_id}/check": {
            "get": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Check if a product is favorited",
                "operationId": "630e471a27ee63d5e12a8e9fc6220443",
                "parameters": [
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "ID of the store",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "ID of the product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Favorite status retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Favorite status retrieved."
                                        },
                                        "data": {
                                            "properties": {
                                                "is_favorite": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/resend-otp": {
            "post": {
                "tags": [
                    "OTP"
                ],
                "summary": "Resend OTP to the user's email",
                "operationId": "b9ca2fb8c7432f6e445ab1baabdde545",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "The email address of the user",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP resent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OTP resent successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Registration data not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Registration data not found. Please register again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/validate-otp": {
            "post": {
                "tags": [
                    "OTP"
                ],
                "summary": "Validate OTP and complete user registration",
                "operationId": "4652e7dec22bb86a5ca55c0ba447b690",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "otp"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "The email address of the user",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "otp": {
                                        "description": "The OTP sent to the user's email",
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Registration completed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Registration completed successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Email not found or session expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Email not found. Please register again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid OTP",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OTP is invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Retrieve all products",
                "description": "Returns a paginated list of products with their store and category information.",
                "operationId": "1bfaa78d1c2c3848ab8165c5dadcad3e",
                "parameters": [
                    {
                        "name": "items",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of products with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "retrieve all products"
                                        },
                                        "data": {
                                            "properties": {
                                                "products": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/ProductResource"
                                                    }
                                                },
                                                "status_code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "pagination": {
                                                    "properties": {
                                                        "currentPage": {
                                                            "description": "The current page number",
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "totalPages": {
                                                            "description": "The total number of pages",
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "hasMorePage": {
                                                            "description": "Indicates if there are more pages available",
                                                            "type": "boolean",
                                                            "example": false
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/stores/{store}/products/{product}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Retrieve product details for a specific store",
                "description": "Returns product details, including store information and sub_images (additional images).",
                "operationId": "getStoreProduct",
                "parameters": [
                    {
                        "name": "store_id",
                        "in": "path",
                        "description": "The ID of the store",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 6
                        }
                    },
                    {
                        "name": "product_id",
                        "in": "path",
                        "description": "The ID of the product",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 7
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "retrieve product successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "store_id": {
                                                    "type": "integer",
                                                    "example": 6
                                                },
                                                "store_name": {
                                                    "type": "string",
                                                    "example": "متجر حسووون"
                                                },
                                                "product_id": {
                                                    "type": "integer",
                                                    "example": 7
                                                },
                                                "product_name": {
                                                    "type": "string",
                                                    "example": "clock"
                                                },
                                                "price": {
                                                    "type": "string",
                                                    "example": "20.00"
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "black color"
                                                },
                                                "main_image": {
                                                    "type": "string",
                                                    "format": "url",
                                                    "example": "http://127.0.0.1:8000/products/XwLnjmoXymmCefQwKIxmYfKpVuKXjstUKGRcIM9a.jpg"
                                                },
                                                "sub_images": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "image": {
                                                                "type": "string",
                                                                "format": "url",
                                                                "example": "http://127.0.0.1:8000/products/rJl1XLR4FdCGy6NXciZ0ZrCY20DTVtgnSUTb1Awl.png"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found in store",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found in store"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete a product from a store",
                "description": "Allows a store admin to delete a specific product from their store.",
                "operationId": "08544cf0dbd8cd2b11a3efbd9d7582ec",
                "parameters": [
                    {
                        "name": "store",
                        "in": "path",
                        "description": "ID of the store",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "product",
                        "in": "path",
                        "description": "ID of the product",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The product was successfully deleted from the store."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized to delete the product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to delete this product."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found or Store not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The product was not found in this store."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/stores/{store}/products": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Add a product to a store",
                "description": "Adds a new product to a store by the store's owner",
                "operationId": "addProductToStore",
                "parameters": [
                    {
                        "name": "storeId",
                        "in": "path",
                        "description": "ID of the store",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "main_image",
                                    "price",
                                    "quantity",
                                    "description",
                                    "sub_images"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of the product",
                                        "type": "string"
                                    },
                                    "main_image": {
                                        "description": "Main image of the product",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "sub_images[0]": {
                                        "description": "sub image of the product",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "sub_images[1]": {
                                        "description": "sub image of the product",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "sub_images[2]": {
                                        "description": "sub image of the product",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "price": {
                                        "description": "Price of the product",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "quantity": {
                                        "description": "Available quantity of the product",
                                        "type": "integer"
                                    },
                                    "description": {
                                        "description": "Description of the product",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product added to store successfully"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 201
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to add product to this store",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to add a product to this store."
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Store not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store not found"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/stores/{store}/products/{product}": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Update a product in a store",
                "description": "Update product details for a store. Only accessible by users with the store_admin role who own the store.",
                "operationId": "93a13042268cd55408cb79004042c1c0",
                "parameters": [
                    {
                        "name": "store",
                        "in": "path",
                        "description": "ID of the store",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "product",
                        "in": "path",
                        "description": "ID of the product to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "price": {
                                        "description": "New price of the product",
                                        "type": "number",
                                        "format": "float",
                                        "example": 199.99
                                    },
                                    "quantity": {
                                        "description": "New quantity of the product",
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "description": {
                                        "description": "New description of the product",
                                        "type": "string",
                                        "example": "Updated product description"
                                    },
                                    "main_image": {
                                        "description": "Main image for the product",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product details updated successfully."
                                        },
                                        "data": {
                                            "description": "Updated product details",
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to update a product in this store"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found or Store Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/assign-role": {
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Assign a role to a user",
                "description": "Assign a specific role to a user. Only accessible by managers.",
                "operationId": "224ac2c928d9916411233a3dbbe4b630",
                "requestBody": {
                    "description": "Role assignment data",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "role",
                                    "user_id"
                                ],
                                "properties": {
                                    "role": {
                                        "description": "The role name to assign",
                                        "type": "string",
                                        "example": "admin"
                                    },
                                    "user_id": {
                                        "description": "The ID of the user to whom the role will be assigned",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Role assigned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Role assigned successfully"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Only manager can assign roles"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/revoke-role": {
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Revoke a role from a user",
                "description": "Revoke a specific role from a user. Only accessible by managers.",
                "operationId": "d86d1509bf17580fbef6f08d32994cb5",
                "requestBody": {
                    "description": "Role revocation data",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "role",
                                    "user_id"
                                ],
                                "properties": {
                                    "role": {
                                        "description": "The role name to revoke",
                                        "type": "string",
                                        "example": "admin"
                                    },
                                    "user_id": {
                                        "description": "The ID of the user from whom the role will be revoked",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Role revoked successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Role revoked successfully"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Only manager can revoke roles"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/stores": {
            "get": {
                "tags": [
                    "Stores"
                ],
                "summary": "Fetch paginated list of stores",
                "description": "Retrieve a paginated list of stores with their details, including manager, name, image URL, location, and description.",
                "operationId": "getStores",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number to fetch",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "items",
                        "in": "query",
                        "description": "The number of items to display per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stores fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Stores fetched successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "stores": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/StoreResource"
                                                    }
                                                },
                                                "hasMorePages": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No stores available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "There are no stores available"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Stores"
                ],
                "summary": "Create a new store",
                "description": "Creates a new store with the given details. The user must provide valid data, including a logo image, via multipart/form-data.",
                "operationId": "5562ee6fb25788924172167093719fe9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "logo",
                                    "location",
                                    "description",
                                    "name"
                                ],
                                "properties": {
                                    "logo": {
                                        "description": "Image file for the store logo (jpg, png, jpeg)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "location": {
                                        "description": "Location of the store",
                                        "type": "string",
                                        "example": "123 Main St, City, Country"
                                    },
                                    "description": {
                                        "description": "Description of the store",
                                        "type": "string",
                                        "example": "A description of the store"
                                    },
                                    "name": {
                                        "description": "Name of the store",
                                        "type": "string",
                                        "example": "My Store"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Store created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "store created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/StoreResource"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 201
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string",
                                                "example": "The name field is required.",
                                                "property": null
                                            }
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You already have a store and cannot create another one."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Only store admin can create a store"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/stores/{store}": {
            "get": {
                "tags": [
                    "Stores"
                ],
                "summary": "Get a specific store",
                "description": "Retrieve details of a specific store by its ID.",
                "operationId": "a9949c633f955f3c2892647c05d80ac5",
                "parameters": [
                    {
                        "name": "store",
                        "in": "path",
                        "description": "ID of the store to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Store retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "store displayed successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/StoreResource"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Store not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store not found."
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Stores"
                ],
                "summary": "Update an existing store",
                "description": "Update details of an existing store. Only authorized users can update their own stores. The request supports partial updates, including an optional logo file upload.",
                "operationId": "7dac60706528cc7c2bb0a5fe224f2aed",
                "parameters": [
                    {
                        "name": "store",
                        "in": "path",
                        "description": "ID of the store to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "logo": {
                                        "description": "Optional image file for the store logo (jpg, png, jpeg)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "location": {
                                        "description": "Optional location of the store",
                                        "type": "string",
                                        "example": "123 Main St, City, Country"
                                    },
                                    "description": {
                                        "description": "Optional description of the store",
                                        "type": "string",
                                        "example": "A description of the store"
                                    },
                                    "name": {
                                        "description": "Optional name of the store",
                                        "type": "string",
                                        "example": "My Updated Store"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Store updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/StoreResource"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User not authorized to update this store",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to update this store."
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": {}
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Stores"
                ],
                "summary": "Delete a specific store",
                "description": "Delete a store by its ID.",
                "operationId": "d85a9563ceec3d622401123020ca99f6",
                "parameters": [
                    {
                        "name": "store",
                        "in": "path",
                        "description": "ID of the store to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Store deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store deleted successfully"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Store not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store not found."
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized to delete the store",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to delete this store."
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a list of all users",
                "operationId": "7e2f5799553ec93c9c43e2a58490d447",
                "responses": {
                    "200": {
                        "description": "List of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 10
                                            },
                                            "first_name": {
                                                "type": "string",
                                                "example": "abdullah"
                                            },
                                            "last_name": {
                                                "type": "string",
                                                "example": "alksm"
                                            },
                                            "email": {
                                                "type": "string",
                                                "example": "abdallaalkasm9@gmail.com"
                                            },
                                            "location": {
                                                "type": "string",
                                                "example": "Damascus"
                                            },
                                            "phone_number": {
                                                "type": "string",
                                                "example": "0969090711"
                                            },
                                            "fcm_token": {
                                                "type": "string",
                                                "example": "3213"
                                            },
                                            "role": {
                                                "type": "string",
                                                "example": "user"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get details of a specific user",
                "operationId": "910a0c7cf580e1c605648d82a4e57f46",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "first_name": {
                                            "type": "string",
                                            "example": "abdullah"
                                        },
                                        "last_name": {
                                            "type": "string",
                                            "example": "alksm"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "abdallaalkasm9@gmail.com"
                                        },
                                        "location": {
                                            "type": "string",
                                            "example": "Damascus"
                                        },
                                        "phone_number": {
                                            "type": "string",
                                            "example": "0969090711"
                                        },
                                        "fcm_token": {
                                            "type": "string",
                                            "example": "3213"
                                        },
                                        "role": {
                                            "type": "string",
                                            "example": "user"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update a user's information",
                "operationId": "ddfe232db1870b82493bf8bd25596d37",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "abdullah"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "alksm"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "abdallaalkasm9@gmail.com"
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "Damascus"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "0969090711"
                                    },
                                    "fcm_token": {
                                        "type": "string",
                                        "example": "3213"
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "admin"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated user details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "first_name": {
                                            "type": "string",
                                            "example": "abdullah"
                                        },
                                        "last_name": {
                                            "type": "string",
                                            "example": "alksm"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "abdallaalkasm9@gmail.com"
                                        },
                                        "location": {
                                            "type": "string",
                                            "example": "Damascus"
                                        },
                                        "phone_number": {
                                            "type": "string",
                                            "example": "0969090711"
                                        },
                                        "fcm_token": {
                                            "type": "string",
                                            "example": "3213"
                                        },
                                        "role": {
                                            "type": "string",
                                            "example": "admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "operationId": "43dd20becb1f47444e484cbb18ce345c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted successfully"
                    }
                }
            }
        },
        "/users/{id}/upload": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Upload a profile image for a user",
                "operationId": "34ccc03d36000ae607ed1c990665544e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "description": "Profile image file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Image uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "path": {
                                            "type": "any path"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ProductResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "store_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "store_name": {
                        "type": "string",
                        "example": "Aydiiiii"
                    },
                    "product_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "product_name": {
                        "type": "string",
                        "example": "Product Name"
                    },
                    "price": {
                        "type": "string",
                        "example": "100.00"
                    },
                    "quantity": {
                        "type": "integer",
                        "example": 50
                    },
                    "is_fav": {
                        "type": "boolean",
                        "example": true
                    },
                    "description": {
                        "type": "string",
                        "example": "Product description for this store"
                    },
                    "main_image": {
                        "type": "string",
                        "example": "path/to/main_image.jpg"
                    }
                },
                "type": "object"
            },
            "StoreResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "manager": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "name": {
                        "type": "string",
                        "example": "My Store"
                    },
                    "image_url": {
                        "type": "string",
                        "example": "http://127.0.0.1:8000/storage/stores/TFmQ589RA4AdMS6thfgp1suFcmv3TsWvEvPNNyUF.jpg"
                    },
                    "location": {
                        "type": "string",
                        "example": "123 Main St, City, Country",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "example": "A description of the store"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Cart",
            "description": "Cart"
        },
        {
            "name": "Favorites",
            "description": "Favorites"
        },
        {
            "name": "OTP",
            "description": "OTP"
        },
        {
            "name": "Products",
            "description": "Products"
        },
        {
            "name": "Roles",
            "description": "Roles"
        },
        {
            "name": "Stores",
            "description": "Stores"
        },
        {
            "name": "Users",
            "description": "Users"
        }
    ]
}